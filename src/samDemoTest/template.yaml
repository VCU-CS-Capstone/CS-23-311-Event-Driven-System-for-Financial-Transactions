AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:

  sqsToLambdaToDyno:
    Type: AWS::SQS::Queue

  LambdaWriteToDynamoDB:
    # A function that writes to a DynamoDB table on a schedule
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: LambdaWriteToDynamoDB
      Handler: app.lambda_handler
      Runtime: python3.7
      CodeUri: hello_world/
      Description: A function that writes to a DynamoDB table
      MemorySize: 128
      Timeout: 30
      Policies:
      # Read more about SAM policy templates here
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
       - AWSLambdaExecute
       - DynamoDBCrudPolicy:
          TableName: !Ref MyDynamoDBTable
      Environment:
        Variables:
          TABLE_NAME: !Ref MyDynamoDBTable
      Events:
        Trigger:
          Type: SQS
          Properties:
            Queue: !GetAtt sqsToLambdaToDyno.Arn
            BatchSize: 10

  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: MyDynamoDBTable
      KeySchema:
        - AttributeName: accountId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: accountId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0

    