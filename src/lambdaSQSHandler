#SQS input follows format {"user_id":"user_2","device":"brick","location":"antarctica"}

const AWS = require('aws-sdk');

//initialise dynamoDB client
const dynamoDB = new AWS.DynamoDB.DocumentClient({
    region:'us-east-1',
    apiVersion:'2012-08-10'
});

exports.handler = async (event) => {
  try{
      //messages coming in from SQS are available on the 'Records' array property of the event object:
      const {Records} = event;
      
      //parse and extract the content of the message:
      const body = JSON.parse(Records[0].body); // in this case, only one item is present in the Records array
      
      //logging the incoming message body (view in cloudwatch):
      console.log("Incoming message body from SQS :", body); 
      
      //configure params for writing data to dynamo DB:
      const params = {
          TableName:'sqs-lambda-dynamodb-demo',
          Item:{
              userId : body.user_id,
              userDevice : body.device,
              userLocation : body.location,
              Name : body.name
          } 
      };
      
      //write data to dynamo DB:
      await dynamoDB.put(params).promise();
      
      //success logging to cloudwatch:
      console.log('Successfully written to DynamoDB');
  }catch(error){
      //error handling
      console.error('Error in executing lambda handler for SQS',error);
      return;
  }
};
